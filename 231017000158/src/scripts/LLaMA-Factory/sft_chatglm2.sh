CUDA_VISIBLE_DEVICES=0 accelerate launch --config_file sft_chatglm2.yaml src/train_bash.py \
    --stage sft \ # 指定预训练还是sft dpo，ppo
    --model_name_or_path /data/chatglm2-6b  \ # 指定预训练模型路径
    --do_train \  # 指定要训练，do_eval指定要评估
    --dataset match_data,CHIP_YIER_train \  # 指定数据集,dataset指定要训练的数据集，可以放多个数据集，用逗号分隔
    --template chatglm2 \ # 指定模板，模板指定了模型的结构，可以放多个模板，用逗号分隔；src/llmtuner/data/template.py 在这里加入模板名字，不能修改木模板
    --cutoff_len 1500 \ # 指定截断长度
    --finetuning_type lora \
    --lora_target query_key_value,dense,dense_h_to_4h,dense_4h_to_h \ #
    --output_dir ChatGLM2_for_match__ \
    --overwrite_cache \
    --per_device_train_batch_size 1 \
    --gradient_accumulation_steps 32 \
    --lr_scheduler_type cosine \
    --warmup_ratio 0.1 \
    --logging_steps 10 \
    --save_steps 10000 \
    --learning_rate 1e-4 \
    --num_train_epochs 3.0 \
    --plot_loss \
    --fp16

CUDA_VISIBLE_DEVICES=0 accelerate launch --config_file sft_chatglm2.yaml src/train_bash.py \
    --stage sft \ # 指定预训练还是sft dpo，ppo
    --model_name_or_path /data/chatglm2-6b  \ # 指定预训练模型路径
    --do_train \  # 指定要训练，do_eval指定要评估
    --dataset match_data,CHIP_YIER_train \  # 指定数据集,dataset指定要训练的数据集，可以放多个数据集，用逗号分隔
    --template chatglm2 \ # 指定模板，模板指定了模型的结构，可以放多个模板，用逗号分隔；src/llmtuner/data/template.py 在这里加入模板名字，不能修改木模板
    --cutoff_len 1500 \ # 指定截断长度，
    --finetuning_type lora \
    --lora_target query_key_value,dense,dense_h_to_4h,dense_4h_to_h \ # 都是全连接层，显存不够只用qkv，最重要
    --output_dir ChatGLM2_for_match__ \ # 指定输出路径，lora权重路径
    --overwrite_cache \ # 是否覆盖缓存，一般不用改，覆盖数据集缓存，
    --per_device_train_batch_size 4 \ # 指定每个设备的batch size 1，2，4，8，每张卡的batch size
    --gradient_accumulation_steps 32 \  # 指定梯度累积步数，一般不用改，梯度累积，累积多少个batch更新一次梯度，128/32=4，每4个batch更新一次梯度；1 * 卡数 * 该stpes= 整体的batch size 梯度的大小
    --lr_scheduler_type cosine \ # 指定学习率衰减方式，一般不用改，学习率衰减方式
    --warmup_ratio 0.1 \  # ？？
    --logging_steps 10 \
    --save_steps 10000 \ # 3、4个epoch，每个epoch有多少个step（根据数据集的大小/整体batch size ），整体的batch保存一次模型；
    --learning_rate 1e-4 \  # 不能比这个小
    --num_train_epochs 3.0 \  # 指定训练的epoch数，3、4个就够了
    --plot_loss \ # 是否画loss图
    --fp16  # baichuan bf16, 参数的数据类型